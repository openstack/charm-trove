###############################################################################
# [ WARNING ]
# trove configuration file maintained by Juju
# local changes may be overwritten.
###############################################################################

[DEFAULT]
# Show more verbose log output (sets INFO log level output)
verbose = {{ options.verbose }}

# Show debugging output in logs (sets DEBUG log level output)
debug = {{ options.debug }}

network_driver = trove.network.neutron.NeutronDriver
{% if options.default_neutron_networks %}
default_neutron_networks = {{ options.default_neutron_networks }}
{% else %}
default_neutron_networks =
{% endif %}

update_status_on_fail = True

log_dir = /var/log/trove
{% if identity_service.api_version == '2' %}
trove_auth_url = {{ identity_service.service_protocol }}://{{ identity_service.auth_host }}:{{ identity_service.auth_port }}/v{{ identity_service.api_version }}.0
{% else %}
trove_auth_url = {{ identity_service.service_protocol }}://{{ identity_service.auth_host }}:{{ identity_service.auth_port }}/v{{ identity_service.api_version }}
{% endif %}
notifier_queue_hostname = controller
backend = rabbit

# The default exchange under which topics are scoped. May be
# overridden by an exchange name specified in the 'transport_url option.
control_exchange = trove

#DB Api Implementation
db_api_implementation = trove.db.sqlalchemy.api

taskmanager_manager = trove.taskmanager.manager.Manager

# Region name of this node. Used when searching catalog. Default value is None.
os_region_name = {{ options.region }}
# Service type to use when searching catalog.
nova_compute_service_type = compute
# Service type to use when searching catalog.
#cinder_service_type = volumev2
# Service type to use when searching catalog.
#swift_service_type = object-store
# Service type to use when searching catalog.
#heat_service_type = orchestration
# Service type to use when searching catalog.
#neutron_service_type = network

# Config options for enabling volume service
trove_volume_support = {{ options.trove_volume_support }}
block_device_mapping = vdb
device_path = /dev/vdb
mount_point = /var/lib/mysql
volume_time_out=30
server_delete_time_out=480

# Nova server boot options
# sets the --config-drive argument when doing a nova boot
# (controls how file injection is handled by nova)
use_nova_server_config_drive = {{ options.use_nova_server_config_drive }}

# ================= Guestagent related ========================
guest_config = /etc/trove/conf.d/trove-guestagent.conf
# Use 'guest_info = /etc/guest_info' for pre-Kilo compatibility
#guest_info = guest_info.conf
# Use 'injected_config_location = /etc/trove' for pre-Kilo compatibility
injected_config_location = /etc/trove/conf.d
cloudinit_location = /etc/trove/cloudinit

{% if 'mysql' in options.trove_database %}

[mysql]
tcp_ports = 3306
{% if 'mysql' in  options.trove_database_volume_support %}
volume_support = True
{% else %}
volume_support = False
{% endif %}
device_path = /dev/vdb
{% endif %}
{% if 'redis' in options.trove_database %}

[redis]
# Format (single port or port range): A, B-C
# where C greater than B
tcp_ports = 6379
{% if 'redis' in  options.trove_database_volume_support %}
volume_support = True
{% else %}
volume_support = False
{% endif %}
# redis uses local storage
# default device_path = None
{% endif %}
{% if 'cassandra' in options.trove_database %}

[cassandra]
tcp_ports = 7000, 7001, 9042, 9160
{% if 'cassandra' in  options.trove_database_volume_support %}
volume_support = True
{% else %}
volume_support = False
{% endif %}
device_path = /dev/vdb
{% endif %}
{% if 'couchbase' in options.trove_database %}

[couchbase]
tcp_ports = 8091, 8092, 4369, 11209-11211, 21100-21199
{% if 'couchbase' in  options.trove_database_volume_support %}
volume_support = True
{% else %}
volume_support = False
{% endif %}
device_path = /dev/vdb
{% endif %}
{% if 'mongodb' in options.trove_database %}

[mongodb]
{% if 'mongodb' in  options.trove_database_volume_support %}
volume_support = True
{% else %}
volume_support = False
{% endif %}
device_path = /dev/vdb
{% endif %}
{% if 'vertica' in options.trove_database %}

[vertica]
tcp_ports = 5433, 5434, 22, 5444, 5450, 4803
udp_ports = 5433, 4803, 4804, 6453
{% if 'vertica' in  options.trove_database_volume_support %}
volume_support = True
{% else %}
volume_support = False
{% endif %}
device_path = /dev/vdb
mount_point = /var/lib/vertica
taskmanager_strategy = trove.common.strategies.cluster.experimental.vertica.taskmanager.VerticaTaskManagerStrategy
{% endif %}

{% include "parts/section-rabbitmq-oslo" %}

{% include "parts/section-database" %}
