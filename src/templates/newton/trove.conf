###############################################################################
# [ WARNING ]
# trove configuration file maintained by Juju
# local changes may be overwritten.
###############################################################################

[DEFAULT]
auth_strategy = keystone
log_dir = /var/log/trove
{% if identity_service.api_version == '2' %}
trove_auth_url = {{ identity_service.service_protocol }}://{{ identity_service.auth_host }}:{{ identity_service.auth_port }}/v{{ identity_service.api_version }}.0
{% else %}
trove_auth_url = {{ identity_service.service_protocol }}://{{ identity_service.auth_host }}:{{ identity_service.auth_port }}/v{{ identity_service.api_version }}
{% endif %}
notifier_queue_hostname = controller

network_driver = trove.network.neutron.NeutronDriver
{% if options.default_neutron_networks %}
default_neutron_networks = {{ options.default_neutron_networks }}
{% else %}
default_neutron_networks =
{% endif %}

# Show debugging output in logs (sets DEBUG log level output)
debug = {{ options.debug }}

# Address to bind the API server
bind_host = {{ options.service_listen_info.trove_api.ip }}

# Port the bind the API server to
#bind_port = 8779
bind_port = {{ options.service_listen_info.trove_api.port }}

rpc_backend = rabbit

# Config option for showing the IP address that nova doles out
add_addresses = True
api_paste_config = /etc/trove/api-paste.ini

control_exchange = trove

#DB Api Implementation
db_api_implementation = "trove.db.sqlalchemy.api"

# Region name of this node. Used when searching catalog. Default value is None.
os_region_name = {{ options.region }}
# Service type to use when searching catalog.
#nova_compute_service_type = compute
# Service type to use when searching catalog.
#cinder_service_type = volumev2
# Service type to use when searching catalog.
#swift_service_type = object-store
# Service type to use when searching catalog.
#heat_service_type = orchestration
# Service type to use when searching catalog.
#neutron_service_type = network

# Config option for showing the IP address that nova doles out
# For nova-network, set this to the appropriate network label defined in nova
# For neutron, set this to .* since users can specify custom network labels
# You can also optionally specify regex'es to match the actual IP addresses
# ip_regex (white-list) is applied before black_list_regex in the filter chain
#network_label_regex = ^private$
#with neutron enabled
network_label_regex = {{ options.trove_network_label_regex }}
#ip_regex = ^(15.|123.)
{% if options.trove_ip_regex  %}
ip_regex = {{ options.trove_ip_regex }}
{% endif %}
#black_list_regex = ^10.0.0.
{% if options.trove_black_list_regex  %}
black_list_regex = {{ options.trove_black_list_regex }}
{% endif %}

# Config options for enabling volume service
trove_volume_support = {{ options.trove_volume_support }}
#block_device_mapping = vdb
#device_path = /dev/vdb
# Maximum volume size for an instance
#max_accepted_volume_size = 10
#max_instances_per_tenant = 5
# Maximum volume capacity (in GB) spanning across all trove volumes per tenant
#max_volumes_per_tenant = 100
#max_backups_per_tenant = 5
#volume_time_out=30

{% include "parts/section-rabbitmq-oslo" %}

{% include "parts/section-database" %}

{% include "parts/section-keystone-authtoken" %}

{% if 'mysql' in options.trove_database %}
[mysql]
root_on_create = False
# Format (single port or port range): A, B-C
# where C greater than B
tcp_ports = 3306
{% if 'mysql' in options.trove_database_volume_support %}
volume_support = True
{% else %}
volume_support = False
{% endif %}
device_path = /dev/vdb

# Users to ignore for user create/list/delete operations
ignore_users = os_admin, root
ignore_dbs = mysql, information_schema, performance_schema
{% endif %}

[percona]
{% if 'redis' in options.trove_database %}

[redis]
tcp_ports = 6379
#redis uses local storage
# default device_path = None
{% if 'redis' in options.trove_database_volume_support %}
volume_support = True
{% else %}
volume_support = False
{% endif %}
{% endif %}
{% if 'cassandra' in options.trove_database %}

[cassandra]
tcp_ports = 7000, 7001, 9042, 9160
{% if 'cassandra' in options.trove_database_volume_support %}
volume_support = True
{% else %}
volume_support = False
{% endif %}
device_path = /dev/vdb
{% endif %}
{% if 'couchbase' in options.trove_database %}

[couchbase]
tcp_ports = 8091, 8092, 4369, 11209-11211, 21100-21199
{% if 'couchbase' in options.trove_database_volume_support %}
volume_support = True
{% else %}
volume_support = False
{% endif %}
device_path = /dev/vdb
{% endif %}
{% if 'mongodb' in options.trove_database %}

[mongodb]
tcp_ports = 2500, 27017
{% if 'mongodb' in options.trove_database_volume_support %}
volume_support = True
{% else %}
volume_support = False
{% endif %}
device_path = /dev/vdb
num_config_servers_per_cluster = 1
num_query_routers_per_cluster = 1
{% endif %}
{% if 'vertica' in options.trove_database %}

[vertica]
tcp_ports = 5433, 5434, 22, 5444, 5450, 4803
udp_ports = 5433, 4803, 4804, 6453
{% if 'vertica' in options.trove_database_volume_support %}
volume_support = True
{% else %}
volume_support = False
{% endif %}
device_path = /dev/vdb
cluster_support = True
cluster_member_count = 3
api_strategy = trove.common.strategies.cluster.experimental.vertica.api.VerticaAPIStrategy
{% endif %}
